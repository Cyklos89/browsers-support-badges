{"version":3,"sources":["components/preview.jsx","components/panel.jsx","components/footer.jsx","components/main.jsx","index.js"],"names":["Preview","state","isCopied","browsers","this","props","i","mdStringHeadingLine","length","support","map","item","img","name","join","ieSupportedVersions","key","version","push","mdString","createMDCode","marked","gfm","tables","copyAction","ReactDOM","findDOMNode","refs","mdCopyBtn","copyCode","mdCode","Clipboard","target","setState","setTimeout","blur","mdPreview","innerHTML","createMDPreview","value","className","ref","title","id","readOnly","React","Component","buildLogoSrc","size","Panel","IE7","IE8","IE9","IE10","IE11","Edge","handleBrowserSupportBound","handleBrowserSupport","bind","handleVersionChangeBound","handleVersionChange","handleVersionVaryBound","handleVersionVary","handleIEVersionsChangeBound","handleIEVersionsChange","arr","supportCounter","forEach","dataset","event","btnDown","btnUp","disabled","index","isLastActive","supportLength","supportKey","data-index","checked","onChange","type","htmlFor","Object","keys","data-key","data-id","max","onClick","d","s","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","Footer","href","rel","data-icon","data-show-count","aria-label","data-href","data-layout","data-action","data-size","data-show-faces","data-share","App","render"],"mappings":"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","file":"static/js/main.4eb20cee.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport marked from 'marked';\nimport Clipboard from 'clipboard';\n\nimport {ReactComponent as IconBook} from '@primer/octicons/build/svg/book.svg';\nimport {ReactComponent as IconCheck} from '@primer/octicons/build/svg/check.svg';\nimport {ReactComponent as IconClippy} from '@primer/octicons/build/svg/clippy.svg';\n\nclass Preview extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            isCopied: null,\n        };\n    }\n\n    createMDCode() {\n        const {browsers} = this.props;\n\n        let i = 0;\n        let mdStringHeadingLine = '';\n\n        for (i; i < browsers.length; i++) {\n            if (browsers[i].support) {\n                mdStringHeadingLine += '| --------- ';\n            }\n        }\n\n        return (\n            '## Browsers support' +\n            '\\n\\n' +\n            browsers.map((item) => {\n                if (item.support) {\n                    return (\n                        '| ' +\n                        '[<img src=\"' + item.img + '\" alt=\"' + item.name + '\" width=\"24px\" height=\"24px\" />](http://godban.github.io/browsers-support-badges/)<br/>' +\n                        item.name + ' ');\n                }\n\n                return null;\n            }).join('') +\n            '|\\n' +\n            mdStringHeadingLine +\n            '|\\n' +\n            browsers.map((item) => {\n                if (item.support) {\n                    if (item.name === 'IE / Edge') {\n                        const ieSupportedVersions = [];\n\n                        for (let key in item.version) {\n                            if (item.version[key]) {\n                                ieSupportedVersions.push(key);\n                            }\n                        }\n\n                        return '| ' + ieSupportedVersions.join(', ');\n                    } else {\n                        if (item.version === 1) {\n                            return '| last version';\n                        } else {\n                            return '| last ' + item.version + ' versions';\n                        }\n                    }\n                }\n\n                return null;\n            }).join('')\n        );\n    }\n\n    createMDPreview() {\n        const mdString = this.createMDCode();\n\n        return marked(mdString, {\n            gfm: true,\n            tables: true\n        });\n    }\n\n    componentDidMount() {\n        const copyAction = ReactDOM.findDOMNode(this.refs.mdCopyBtn);\n        const copyCode = ReactDOM.findDOMNode(this.refs.mdCode);\n\n        new Clipboard(copyAction, {\n            target: () => {\n                this.setState({isCopied: true});\n\n                setTimeout(() => {\n                    copyCode.blur();\n                }, 0);\n\n                setTimeout(() => {\n                    this.setState({isCopied: false});\n                }, 2000);\n\n                return copyCode;\n            }\n        });\n\n        ReactDOM.findDOMNode(this.refs.mdPreview).innerHTML = this.createMDPreview();\n        ReactDOM.findDOMNode(this.refs.mdCode).value = this.createMDCode();\n    }\n\n    componentDidUpdate() {\n        ReactDOM.findDOMNode(this.refs.mdPreview).innerHTML = this.createMDPreview();\n        ReactDOM.findDOMNode(this.refs.mdCode).value = this.createMDCode();\n    }\n\n    render() {\n        return (\n            <div className='markdown'>\n                <div className='markdown-body__wrap'>\n                    <h3 className='markdown-body__title'>\n                        <IconBook className=\"icon icon--book\" /> README.md\n                    </h3>\n                    <div className='markdown-body'>\n                        <div ref='mdPreview' />\n                        <div className=\"tip\">Click to collect code and paste it into yours README.md</div>\n                    </div>\n                    <span className='pointer pointer--inverse'>&#10548;</span>\n                </div>\n                <div className='markdown-code__wrap'>\n                    <button\n                        className='btn btn-copy btn--text'\n                        ref='mdCopyBtn'\n                        title='Click to copy to clipboard.'\n                    >\n                        {\n                            this.state.isCopied ?\n                                <Fragment>\n                                    <IconCheck className=\"icon--copy\" />\n                                    Copied\n                                </Fragment>\n                                :\n                                <Fragment>\n                                    <IconClippy className=\"icon--copy\" />\n                                    Copy\n                                </Fragment>\n                        }\n                    </button>\n                    <textarea\n                        id='mdCode'\n                        className='markdown-code'\n                        ref='mdCode'\n                        readOnly\n                    />\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Preview;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Preview from './preview';\n\nimport {ReactComponent as IconMarkGithub} from '@primer/octicons/build/svg/mark-github.svg';\nimport {ReactComponent as IconCheck} from '@primer/octicons/build/svg/check.svg';\nimport {ReactComponent as IconX} from '@primer/octicons/build/svg/x.svg';\nimport {ReactComponent as IconChevronUp} from '@primer/octicons/build/svg/chevron-up.svg';\nimport {ReactComponent as IconChevronDown} from '@primer/octicons/build/svg/chevron-down.svg';\n\nconst buildLogoSrc = (name, size = '48x48') => `https://raw.githubusercontent.com/alrra/browser-logos/master/src/${name}/${name}_${size}.png`;\n\nclass Panel extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            browsers: [\n                {\n                    name: 'IE / Edge',\n                    version: {\n                        IE7: false,\n                        IE8: false,\n                        IE9: false,\n                        IE10: false,\n                        IE11: true,\n                        Edge: true\n                    },\n                    img: buildLogoSrc('edge'),\n                    support: true\n                },\n                {\n                    name: 'Firefox',\n                    version: 2,\n                    img: buildLogoSrc('firefox'),\n                    support: true\n                },\n                {\n                    name: 'Chrome',\n                    version: 2,\n                    img: buildLogoSrc('chrome'),\n                    support: true\n                },\n                {\n                    name: 'Safari',\n                    version: 2,\n                    img: buildLogoSrc('safari'),\n                    support: true\n                },\n                {\n                    name: 'iOS Safari',\n                    version: 2,\n                    img: buildLogoSrc('safari-ios'),\n                    support: true\n                },\n                {\n                    name: 'Samsung',\n                    version: 2,\n                    img: buildLogoSrc('samsung-internet'),\n                    support: true\n                },\n                {\n                    name: 'Opera',\n                    version: 2,\n                    img: buildLogoSrc('opera'),\n                    support: true\n                },\n                {\n                    name: 'Opera Mini',\n                    version: 2,\n                    img: buildLogoSrc('opera-mini'),\n                    support: false\n                },\n                {\n                    name: 'Vivaldi',\n                    version: 2,\n                    img: buildLogoSrc('vivaldi'),\n                    support: false\n                },\n                {\n                    name: 'Yandex',\n                    version: 2,\n                    img: buildLogoSrc('yandex'),\n                    support: false\n                },\n                {\n                    name: 'Electron',\n                    version: 2,\n                    img: buildLogoSrc('electron'),\n                    support: false\n                }\n            ],\n        };\n\n        this.handleBrowserSupportBound = this.handleBrowserSupport.bind(this);\n        this.handleVersionChangeBound = this.handleVersionChange.bind(this);\n        this.handleVersionVaryBound = this.handleVersionVary.bind(this);\n        this.handleIEVersionsChangeBound = this.handleIEVersionsChange.bind(this);\n    }\n\n    isLastActive(arr, id) {\n        let supportCounter = 0;\n\n        arr.forEach((item) => {\n            if (item.support) {\n                supportCounter++;\n            }\n        });\n\n        if (supportCounter === 1 && arr[id].support) {\n            return true;\n        }\n    }\n\n    handleVersionChange({target}) {\n        const {browsers} = this.state;\n\n        browsers[target.dataset.id].version = target.value;\n\n        this.setState({\n            browsers\n        });\n    }\n\n    handleVersionVary(event) {\n        const {target} = event;\n        const {id} = target.dataset;\n        const {browsers} = this.state;\n\n        const btnDown = ReactDOM.findDOMNode(this.refs['btnDown' + id]);\n        const btnUp = ReactDOM.findDOMNode(this.refs['btnUp' + id]);\n\n        const VERSION_MAX = 10;\n\n        if (target === btnUp) {\n            if (browsers[id].version === 1) {\n                btnDown.disabled = false;\n            }\n            if (browsers[id].version < VERSION_MAX) {\n                browsers[id].version++;\n            }\n            if (browsers[id].version === VERSION_MAX) {\n                target.disabled = true;\n            }\n        } else {\n            if (browsers[id].version === VERSION_MAX) {\n                btnUp.disabled = false;\n            }\n            if (browsers[id].version > 1) {\n                browsers[id].version--;\n            }\n            if (browsers[id].version === 1) {\n                target.disabled = true;\n            }\n        }\n\n        this.setState({browsers: browsers});\n    }\n\n    handleBrowserSupport({target}) {\n        const id = target.dataset.index;\n        const {browsers} = this.state;\n\n        if (this.isLastActive(browsers, id)) {\n            return null;\n        }\n\n        browsers[id].support = !browsers[id].support;\n\n        if (browsers[id].name === 'IE / Edge') {\n            for (let key in browsers[id].version) {\n                if (browsers[id].support) {\n                    if (\n                        key !== 'IE7'\n                        && key !== 'IE8'\n                        && key !== 'IE9'\n                        && key !== 'IE10'\n                    ) {\n                        browsers[id].version[key] = true\n                    }\n                } else {\n                    browsers[id].version[key] = false;\n                }\n            }\n        }\n\n        this.setState({browsers: browsers});\n    }\n\n    handleIEVersionsChange({target}) {\n        const {key} = target.dataset;\n        const {browsers} = this.state;\n        let supportLength = 0;\n\n        browsers[0].version[key] = !browsers[0].version[key];\n\n        for (let supportKey in browsers[0].version) {\n            if (browsers[0].version[supportKey]) supportLength++;\n        }\n\n        browsers[0].support = (supportLength !== 0);\n\n        this.setState({browsers: browsers});\n    }\n\n    render() {\n        const {browsers} = this.state;\n\n        return (\n            <div className='browsers__wrap'>\n                <h1 className='main__title'>\n                    Browsers support for README.md\n                    <span className='main__sub-title'>\n                        <IconMarkGithub className=\"icon icon--markGithub\" />\n                        <span className=\"octicon octicon-mark-github\" /> GitHub Flavored Markdown\n                    </span>\n                </h1>\n                <div className='browser__wrap'>\n                    {browsers.map((item, index) => {\n                        return (\n                            <div\n                                className='browser'\n                                key={item.name}\n                                disabled={!item.support}\n                            >\n                                <div className='browser__heading'>\n                                    <input\n                                        id={'check' + item.name}\n                                        className='form__checkbox browser__checkbox'\n                                        data-index={index}\n                                        checked={item.support}\n                                        onChange={this.handleBrowserSupportBound}\n                                        type='checkbox'\n                                    />\n                                    <label\n                                        className='browser__checkbox-label browser__title'\n                                        htmlFor={'check' + item.name}\n                                    >\n                                        <IconCheck className=\"icon icon--check browser__checkbox-icon\" />\n                                        <IconX className=\"icon icon--cross browser__checkbox-icon\" />\n                                        <span className='browser__title-text'>{item.name}</span>\n                                    </label>\n                                </div>\n                                {(item.name === 'IE / Edge') ?\n                                    <div className='browser__control browser__control--ie'>\n                                        {Object.keys(item.version).map(function (key) {\n                                            return (\n                                                <div className='browser__control-ie-version' key={key}>\n                                                    <input\n                                                        id={'check' + key}\n                                                        className='form__checkbox browser__checkbox'\n                                                        data-key={key}\n                                                        checked={item.version[key]}\n                                                        onChange={this.handleIEVersionsChangeBound}\n                                                        type='checkbox'\n                                                    />\n                                                    <label\n                                                        className='browser__checkbox-label browser__checkbox-label--small'\n                                                        htmlFor={'check' + key}\n                                                    >\n                                                        <IconCheck\n                                                            className=\"icon icon--check browser__checkbox-icon\"\n                                                        />\n                                                        <IconX className=\"icon icon--cross browser__checkbox-icon\" />\n                                                        {key}\n                                                    </label>\n                                                </div>\n                                            );\n                                        }, this)}\n                                    </div>\n                                    :\n                                    <div className='browser__control'>\n                                        last\n                                        <input\n                                            className='form__input form__input--text form__input--no-spinners'\n                                            data-id={index}\n                                            onChange={this.handleVersionChangeBound}\n                                            value={item.version}\n                                            max='10'\n                                            type='number'\n                                        />\n                                        <button\n                                            className='btn btn--text btn-up'\n                                            data-id={index}\n                                            ref={'btnUp' + index}\n                                            onClick={this.handleVersionVaryBound}\n                                            type='button'\n                                        >\n                                            <IconChevronUp className=\"icon\" />\n                                        </button>\n                                        <button\n                                            className='btn btn--text btn-down'\n                                            data-id={index}\n                                            ref={'btnDown' + index}\n                                            onClick={this.handleVersionVaryBound}\n                                            type='button'\n                                        >\n                                            <IconChevronDown className=\"icon\" />\n                                        </button>\n                                    </div>}\n                            </div>\n                        );\n                    }, this)}\n                    <span className='pointer'>&#10549;</span>\n                </div>\n                <Preview browsers={browsers} />\n            </div>\n        );\n    };\n}\n\nexport default Panel;\n","/* eslint-disable */\n\nimport React from 'react';\n\nimport {ReactComponent as IconMarkGithub} from '@primer/octicons/build/svg/mark-github.svg';\n\n(function(d,s,id){let js,fjs=d.getElementsByTagName(s)[0];if(d.getElementById(id))return;js=d.createElement(s);js.id=id;js.src='https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.12&appId=1547693265447721&autoLogAppEvents=1';fjs.parentNode.insertBefore(js,fjs);}(document,'script','facebook-jssdk'));\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <div className=\"author\">\n                made by\n                <a\n                    className=\"authorLink\"\n                    href=\"https://github.com/godban\"\n                    target=\"_blank\"\n                    rel=\"author\"\n                >\n                    <IconMarkGithub className=\"authorIcon\" />\n                    {'godban'}\n                </a>\n            </div>\n            <div className=\"social-box\">\n                <div className=\"social-box__item social-box__item--gh\">\n                    <a\n                        className=\"github-button\"\n                        href=\"https://github.com/godban/browsers-support-badges\"\n                        data-icon=\"octicon-star\"\n                        data-show-count=\"true\"\n                        aria-label=\"Star godban/browsers-support-badges on GitHub\"\n                    >Star</a>\n                </div>\n                <div className=\"social-box__twitter social-box__item\">\n                    <a\n                        href=\"https://twitter.com/share\"\n                        className=\"twitter-share-button\"\n                        data-show-count=\"false\"\n                    >Tweet</a>\n                </div>\n                <div className=\"social-box__facebook social-box__item\">\n                    <div\n                        className=\"fb-like\"\n                        data-href=\"http://godban.github.io/browsers-support-badges\"\n                        data-layout=\"button_count\"\n                        data-action=\"like\"\n                        data-size=\"small\"\n                        data-show-faces=\"false\"\n                        data-share=\"false\"\n                    />\n                </div>\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React, {Component} from 'react';\n\nimport Panel from './panel';\nimport Footer from './footer';\n\nclass App extends Component {\n    render() {\n        return (\n            <main className=\"main\">\n                <Panel/>\n                <Footer/>\n            </main>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Main from './components/main';\n\nimport 'no-sheet-reset/index.css';\nimport './markdown.css';\nimport './index.css';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}